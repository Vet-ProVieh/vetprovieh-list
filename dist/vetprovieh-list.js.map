{"version":3,"file":"vetprovieh-list.js","sources":["../node_modules/@tomuench/vetprovieh-shared/lib/helpers/object-helper.ts","../node_modules/@tomuench/vetprovieh-shared/lib/helpers/view-helper.ts","../node_modules/@tomuench/vetprovieh-shared/lib/core/vetprovieh-element.ts","../node_modules/@tomuench/vetprovieh-shared/lib/core/vetprovieh-repeat.ts","../node_modules/@tomuench/vetprovieh-shared/lib/decorators/web-component.ts","../lib/list-item.ts","../node_modules/@tomuench/vetprovieh-pager/node_modules/@tomuench/vetprovieh-shared/lib/helpers/object-helper.ts","../node_modules/@tomuench/vetprovieh-pager/node_modules/@tomuench/vetprovieh-shared/lib/helpers/view-helper.ts","../node_modules/@tomuench/vetprovieh-pager/node_modules/@tomuench/vetprovieh-shared/lib/core/vetprovieh-element.ts","../node_modules/@tomuench/vetprovieh-pager/node_modules/@tomuench/vetprovieh-shared/lib/core/vetprovieh-repeat.ts","../node_modules/@tomuench/vetprovieh-pager/lib/vetprovieh-pager.ts","../lib/vetprovieh-list.ts"],"sourcesContent":["import {Indexable} from '../interfaces/indexable';\n\n/**\n * Helper to get and set Attributes on Objects\n */\nexport class ObjectHelper {\n  /**\n   * Checking if the Element is an Object\n   * @param obj\n   */\n  static isObject(obj: any): boolean {\n    return obj != null && typeof (obj) === 'object';\n  }\n\n  /**\n     * Getting Value from JSON-Object\n     * @param {Indexable} object\n     * @param {string} key\n     * @return {any}\n     */\n  static get(object: Indexable, key: string) : any {\n    try {\n      const attributes: string[] = key.split('.');\n      return this._iterateThrough(object, attributes);\n    } catch (ex) {\n      return undefined;\n    }\n  }\n\n  /**\n     * Iterating Through Object\n     * @param {Indexable} obj\n     * @param {string[]} attributes\n     * @param {number} depth\n     * @return {any}\n     * @private\n     */\n  static _iterateThrough(obj: Indexable, attributes: string[], depth = 0): any {\n    if (depth < 0) return undefined;\n\n    while (attributes.length > depth) {\n      const attribute :string = attributes.shift() as string;\n      if (!obj) throw new Error('Unknown Key');\n      obj = obj[attribute];\n    }\n    return obj;\n  }\n\n  /**\n     * Setting value for Object\n     * @param {Indexable} object\n     * @param {string} key\n     * @param {any} value\n     */\n  static set(object: Indexable, key: string, value: any): void {\n    const attributes: string[] = key.split('.');\n    object = this._iterateThrough(object, attributes, 1);\n    const property = attributes[0];\n    object[property] = value;\n  }\n\n\n  /**\n     * Object to String\n     * @param {Object} obj\n     * @return {string}\n     */\n  static objectToStringDeep(obj: any) : string {\n    if (!obj) return '';\n\n    return Object.keys(obj).map((k: string) => {\n      const value: any = obj[k];\n      if (typeof (value) == 'object') {\n        return ObjectHelper.objectToStringDeep(value);\n      } else {\n        return value;\n      }\n    }).toString();\n  }\n}\n","import {ObjectHelper} from './object-helper';\nimport {Indexable} from '../interfaces/indexable';\n\n/**\n * Helpers for View\n */\nexport class ViewHelper {\n  /**\n     * Mark text yellow inside an element.\n     * @param {Node} element\n     * @param {string} input\n     */\n  static markElement(element: Node | ChildNode, input: string): void {\n    if (input != '') {\n      element.childNodes.forEach((n: Node) => {\n        const value: string = n.nodeValue || '';\n        if (n.nodeName === '#text' && value.indexOf(input) >= 0) {\n          (element as HTMLElement).innerHTML = (n as Indexable)['data']\n              .split(input)\n              .join('<mark>' + input + '</mark>');\n        } else {\n          ViewHelper.markElement(n, input);\n        }\n      });\n    }\n  }\n\n  /**\n   * Getting URL-Parameter from address\n   * @param {string} key\n   * @return {string}\n   */\n  static getParameter(key: string): string | null {\n    const urlString = window.location.href;\n    const url = new URL(urlString);\n    const value = url.searchParams.get(key);\n\n    return value;\n  }\n\n\n  /**\n     * Regex to fill keys in template\n     * @return {RegExp}\n     */\n  static get regexTemplate(): RegExp {\n    return /{{([a-zA-Z0-9\\.]+)}}/;\n  }\n\n  /**\n     * Replacing Placeholders in template from the loaded element\n     * @param {HTMLElement} template\n     * @param {Indexable} e\n     */\n  static replacePlaceholders(template: HTMLElement, e: Indexable): void {\n    let match = null;\n    while (match = template.innerHTML.match(ViewHelper.regexTemplate)) {\n      let value = ObjectHelper.get(e, match[1]);\n      value = value || '';\n      template.innerHTML = template.innerHTML.replace(match[0], value);\n    }\n  }\n}\n","import {Indexable} from '../interfaces';\n\n/**\n * BaseClass for view Elements\n */\nexport class VetproviehElement extends HTMLElement {\n  public get template() {\n    return '';\n  }\n\n\n  constructor(shadowed = true) {\n    super();\n\n    if (shadowed) {\n      this.attachShadow({\n        mode: 'open',\n      });\n    }\n    this.render();\n  }\n\n  /**\n     * Callback Implementation\n     * @param {string} name\n     * @param {any} old\n     * @param {any} value\n     */\n  attributeChangedCallback(name: string, old: any, value: any) {\n    if (old !== value) {\n      this.sendCallback(`_${name}_beforeSet`, value);\n      (this as Indexable)[name] = value;\n      this.sendCallback(`_${name}_afterSet`, value);\n      this.render();\n    }\n  }\n\n  /**\n   * Connected Callback\n   */\n  connectedCallback(){\n  }\n\n\n  private sendCallback(name: string, value: any) {\n    const method = (this as Indexable)[name] as Function;\n    if (method && typeof(method) === 'function') {\n      (this as Indexable)[name](value);\n    }\n  }\n\n  /**\n   * Loading HTML-Element From ShadowRoot\n   * @param {string} id\n   * @return {HTMLElement | undefined}\n   */\n  getByIdFromShadowRoot(id: string): HTMLElement | undefined {\n    if (this.shadowRoot) {\n      return this.shadowRoot.getElementById(id) as HTMLElement;\n    }\n  }\n\n  render() {\n    const renderedTemplate = eval('`' + this.template + '`') as string;\n    if (this.shadowRoot) {\n      this.shadowRoot.innerHTML = renderedTemplate;\n    } else {\n      this.innerHTML = renderedTemplate;\n    }\n  }\n\n  /**\n     * Hide Or Show Element\n     * @param {string} id\n     * @param {boolean} show\n     */\n  updateVisibility(id: string, show: boolean) {\n    const search = this.getByIdFromShadowRoot(id);\n    if (search) {\n      if (!show) {\n        search.classList.add('is-hidden');\n      } else {\n        search.classList.remove('is-hidden');\n      }\n    }\n  }\n\n\n  public set innerHTML(input: string) {\n    if (this.shadowRoot != null) {\n      this.shadowRoot.innerHTML = input;\n    } else {\n      super.innerHTML = input;\n    }\n  }\n\n\n  // -----------------\n  // CLASS METHODS\n  // -----------------\n\n  /**\n     * Getting Template\n     * @return {string}\n     */\n  static get template(): string {\n    return `<link href=\"/node_modules/bulma/css/bulma.min.css\" \n                  rel=\"stylesheet\" type=\"text/css\">`;\n  }\n}\n","import {VetproviehElement} from './vetprovieh-element';\nimport {Indexable} from '../interfaces';\nimport {ViewHelper} from '../helpers';\n\n/**\n * Repeats Template Element. Amount is set by the amount of objects\n * inside\n */\nexport class VetproviehRepeat extends VetproviehElement {\n  /**\n      * Getting View Template\n      * @return {string}\n      */\n  static get template() {\n    return VetproviehElement.template + `<div id=\"listElements\"></div>`;\n  }\n\n  /**\n       * Getting observed Attributes\n       * @return {string[]}\n       */\n  static get observedAttributes() {\n    return ['objects', 'orderBy'];\n  }\n\n    private _objects: Array<any> = [];\n    private _listTemplate: DocumentFragment;\n    private _orderBy = '+position';\n\n    /**\n     * Default-Contructor\n     * @param {HTMLTemplateElement} pListTemplate\n     */\n    constructor(pListTemplate: HTMLTemplateElement | undefined = undefined) {\n      super();\n\n      const listTemplate = pListTemplate || this.querySelector('template');\n      if (listTemplate) {\n        this._listTemplate = listTemplate.content;\n      } else {\n        this._listTemplate = new DocumentFragment();\n      }\n    }\n\n    /**\n     * Get objects\n     * @return {Array<any>}\n     */\n    public get objects(): Array<any> {\n      return this._objects;\n    }\n\n    /**\n     * Set objects\n     * @param {Array<any>} v\n     */\n    public set objects(v: Array<any>) {\n      if (this._objects != v) {\n        this._objects = v;\n        this.clearAndRender();\n      }\n    }\n\n    /**\n    * Get OrderBy\n    * Expect \"+position\" for asceding positon\n    * Expect \"-position\" for descending position\n    * @return {string}\n    */\n    public get orderBy(): string {\n      return this._orderBy;\n    }\n\n    /**\n     * Set OrderBy\n     * @param {string} v\n     */\n    public set orderBy(v: string) {\n      if (this._orderBy != v) {\n        this._orderBy = v;\n        this.clearAndRender();\n      }\n    }\n\n    /**\n    * Connected Callback\n    */\n    connectedCallback() {\n      this._initalizeShadowRoot(VetproviehRepeat.template);\n      this.renderList();\n    }\n\n    /**\n     * Clear and Render\n     */\n    clearAndRender() {\n      this.clear();\n      this._sortObjects();\n      this.renderList();\n    }\n\n    /**\n     * Sorting Objects\n     */\n    private _sortObjects() {\n      try {\n        const asc = this.orderBy.substring(0, 1) == '+' ? 1 : -1;\n        const argument = this.orderBy.substring(1);\n        this.objects = this.objects\n            .sort((a: any, b: any) => {\n              const aValue = a[argument];\n              const bValue = b[argument];\n              return (aValue - bValue) * asc;\n            });\n      } catch (e) {\n\n      }\n    }\n\n    /**\n     * List will be cleared\n     */\n    clear() {\n      const list = this.list;\n      if (list) list.innerHTML = '';\n    }\n\n    /**\n     * Rendering List-Content\n     */\n    renderList() {\n      this.objects\n          .forEach((obj: any, index: number) => {\n            this._attachToList(obj, index);\n          });\n    }\n\n    /**\n     * Inserts Element to List\n     * @param {any} dataItem\n     * @param {index} number\n     * @private\n     */\n    protected _attachToList(dataItem: any, index = 0) {\n      if (this.shadowRoot) {\n        const newListItem: HTMLElement = this._generateListItem(dataItem);\n        dataItem['index'] = index;\n        ViewHelper.replacePlaceholders(newListItem, dataItem);\n\n        const list = this.list;\n        if (list) {\n          list.appendChild(newListItem.children[0]);\n        }\n      }\n    }\n\n\n    /**\n     * Getting List Element\n     * @return {HTMLElement | undefined}\n     */\n    protected get list(): HTMLElement | undefined {\n      if (this.shadowRoot) {\n        return this.shadowRoot.getElementById('listElements') as HTMLElement;\n      } else {\n        return undefined;\n      }\n    }\n\n    /**\n    * Generate new Item for List which is based on the template\n    * @param {any} dataItem\n    * @param {boolean} activatedEventListener\n    * @return {HTMLDivElement}\n    * @private\n    */\n    protected _generateListItem(dataItem: any, activatedEventListener = false) {\n      const newNode = document.importNode(this._listTemplate, true);\n      const div = document.createElement('div');\n\n      if (activatedEventListener) {\n        div.addEventListener('click', () => {\n          const selectedEvent = new Event('selected');\n          (selectedEvent as Indexable)['data'] = dataItem;\n          this.dispatchEvent(selectedEvent);\n        });\n      }\n\n      div.appendChild(newNode);\n      return div;\n    }\n\n    /**\n     * Intializing Shadow-Root\n     * @param {string} template\n     * @protected\n     */\n    protected _initalizeShadowRoot(template: string) {\n      // Lazy creation of shadowRoot.\n      if (!this.shadowRoot) {\n        super.attachShadow({\n          mode: 'open',\n        }).innerHTML = template;\n      }\n    }\n}\n\nif (!customElements.get('vp-repeat')) {\n  customElements.define('vp-repeat', VetproviehRepeat);\n}\n","\ninterface IWebComponentArgs {\n  template: string | undefined;\n  tag: string;\n}\n\nexport function WebComponent(webComponentArgs: IWebComponentArgs) {\n  /**\n     * Defining Tag for HTML-Component\n     * @param {any} constructor\n     * @param {string} tagName\n     */\n  const defineTag = (constructor: any, tagName: string) => {\n    if (!customElements.get(tagName)) {\n      customElements.define(tagName, constructor);\n    }\n  };\n\n  return function <T extends { new(...constructorArgs: any[]): void }>(constructorFunction: T) {\n    /**\n         * Building Wrapper Function for new Constructor\n         * @param args\n         */\n    const newConstructorFunction: any = function (...args: any[]) {\n\n      const func: any = function () {\n        return new constructorFunction(...args);\n      };\n      func.prototype = constructorFunction.prototype;\n\n      const result: any = new func();\n      return result;\n    };\n    newConstructorFunction.prototype = constructorFunction.prototype;\n\n    if (webComponentArgs.template) {\n      Object.defineProperty(newConstructorFunction.prototype, 'template',\n        {\n          get: (): string => webComponentArgs.template || \"\",\n        });\n    }\n    defineTag(constructorFunction, webComponentArgs.tag);\n    return newConstructorFunction;\n  };\n}\n","import { VetproviehList } from \"./vetprovieh-list\";\nimport { WebComponent, ViewHelper, Indexable } from \"@tomuench/vetprovieh-shared/lib\";\n\n\n@WebComponent({\n    template:\"\",\n    tag:\"list-item\"\n})\nexport class ListItem extends HTMLElement {\n\n    private _data: any;\n    private _list: any;\n\n    constructor(list: any, data: any) {\n        super();\n        this._list = list;\n        this._data = data;\n        this._generate();\n    }\n\n    public mark(searchValue: string){\n        if (searchValue) {\n            ViewHelper.markElement(this, searchValue);\n        }\n    }\n\n    private _attachEventListener(event:string){\n        this.addEventListener(event, (event) => {\n            const selectedEvent = new Event('selected');\n            selectedEvent['data'] = this._data;\n            this._list.dispatchEvent(selectedEvent);\n        });\n    }\n\n     /**\n     * Inserts Element to List\n     * @param {object} element\n     * @param {HTMLElement} newListItem\n     * @private\n     */\n    private _attachDataToStoreLocalLink(){\n        const link = this.getElementsByTagName(\"a\")[0] as Indexable;\n        if (link && link.attributes[\"is\"] && link.attributes[\"is\"].value === \"local-store\") {\n            link.params = this._data;\n        }\n    }\n\n    private _generate() {\n        const newNode = document.importNode(this._list.listTemplate, true);\n        this._attachEventListener('click');\n        this.appendChild(newNode);\n        ViewHelper.replacePlaceholders(this, this._data);\n        this._attachDataToStoreLocalLink();\n    }\n}","import {Indexable} from '../interfaces/indexable';\n\n/**\n * Helper to get and set Attributes on Objects\n */\nexport class ObjectHelper {\n  /**\n   * Checking if the Element is an Object\n   * @param obj\n   */\n  static isObject(obj: any): boolean {\n    return obj != null && typeof (obj) === 'object';\n  }\n\n  /**\n     * Getting Value from JSON-Object\n     * @param {Indexable} object\n     * @param {string} key\n     * @return {any}\n     */\n  static get(object: Indexable, key: string) : any {\n    try {\n      const attributes: string[] = key.split('.');\n      return this._iterateThrough(object, attributes);\n    } catch (ex) {\n      return undefined;\n    }\n  }\n\n  /**\n     * Iterating Through Object\n     * @param {Indexable} obj\n     * @param {string[]} attributes\n     * @param {number} depth\n     * @return {any}\n     * @private\n     */\n  static _iterateThrough(obj: Indexable, attributes: string[], depth = 0): any {\n    if (depth < 0) return undefined;\n\n    while (attributes.length > depth) {\n      const attribute :string = attributes.shift() as string;\n      if (!obj) throw new Error('Unknown Key');\n      obj = obj[attribute];\n    }\n    return obj;\n  }\n\n  /**\n     * Setting value for Object\n     * @param {Indexable} object\n     * @param {string} key\n     * @param {any} value\n     */\n  static set(object: Indexable, key: string, value: any): void {\n    const attributes: string[] = key.split('.');\n    object = this._iterateThrough(object, attributes, 1);\n    const property = attributes[0];\n    object[property] = value;\n  }\n\n\n  /**\n     * Object to String\n     * @param {Object} obj\n     * @return {string}\n     */\n  static objectToStringDeep(obj: any) : string {\n    if (!obj) return '';\n\n    return Object.keys(obj).map((k: string) => {\n      const value: any = obj[k];\n      if (typeof (value) == 'object') {\n        return ObjectHelper.objectToStringDeep(value);\n      } else {\n        return value;\n      }\n    }).toString();\n  }\n}\n","import {ObjectHelper} from './object-helper';\nimport {Indexable} from '../interfaces/indexable';\n\n/**\n * Helpers for View\n */\nexport class ViewHelper {\n  /**\n     * Mark text yellow inside an element.\n     * @param {Node} element\n     * @param {string} input\n     */\n  static markElement(element: Node | ChildNode, input: string): void {\n    if (input != '') {\n      element.childNodes.forEach((n: Node) => {\n        const value: string = n.nodeValue || '';\n        if (n.nodeName === '#text' && value.indexOf(input) >= 0) {\n          (element as HTMLElement).innerHTML = (n as Indexable)['data']\n              .split(input)\n              .join('<mark>' + input + '</mark>');\n        } else {\n          ViewHelper.markElement(n, input);\n        }\n      });\n    }\n  }\n\n  /**\n   * Getting URL-Parameter from address\n   * @param {string} key\n   * @return {string}\n   */\n  static getParameter(key: string): string | null {\n    const urlString = window.location.href;\n    const url = new URL(urlString);\n    const value = url.searchParams.get(key);\n\n    return value;\n  }\n\n\n  /**\n     * Regex to fill keys in template\n     * @return {RegExp}\n     */\n  static get regexTemplate(): RegExp {\n    return /{{([a-zA-Z0-9\\.]+)}}/;\n  }\n\n  /**\n     * Replacing Placeholders in template from the loaded element\n     * @param {HTMLElement} template\n     * @param {Indexable} e\n     */\n  static replacePlaceholders(template: HTMLElement, e: Indexable): void {\n    let match = null;\n    while (match = template.innerHTML.match(ViewHelper.regexTemplate)) {\n      let value = ObjectHelper.get(e, match[1]);\n      value = value || '';\n      template.innerHTML = template.innerHTML.replace(match[0], value);\n    }\n  }\n}\n","import {Indexable} from '../interfaces';\n\n/**\n * BaseClass for view Elements\n */\nexport class VetproviehElement extends HTMLElement {\n  public get template() {\n    return '';\n  }\n\n\n  constructor(shadowed = true) {\n    super();\n\n    if (shadowed) {\n      this.attachShadow({\n        mode: 'open',\n      });\n    }\n    this.render();\n  }\n\n  /**\n     * Callback Implementation\n     * @param {string} name\n     * @param {any} old\n     * @param {any} value\n     */\n  attributeChangedCallback(name: string, old: any, value: any) {\n    if (old !== value) {\n      this.sendCallback(`_${name}_beforeSet`, value);\n      (this as Indexable)[name] = value;\n      this.sendCallback(`_${name}_afterSet`, value);\n      this.render();\n    }\n  }\n\n  /**\n   * Connected Callback\n   */\n  connectedCallback(){\n  }\n\n\n  private sendCallback(name: string, value: any) {\n    const method = (this as Indexable)[name] as Function;\n    if (method && typeof(method) === 'function') {\n      (this as Indexable)[name](value);\n    }\n  }\n\n  /**\n   * Loading HTML-Element From ShadowRoot\n   * @param {string} id\n   * @return {HTMLElement | undefined}\n   */\n  getByIdFromShadowRoot(id: string): HTMLElement | undefined {\n    if (this.shadowRoot) {\n      return this.shadowRoot.getElementById(id) as HTMLElement;\n    }\n  }\n\n  render() {\n    const renderedTemplate = eval('`' + this.template + '`') as string;\n    if (this.shadowRoot) {\n      this.shadowRoot.innerHTML = renderedTemplate;\n    } else {\n      this.innerHTML = renderedTemplate;\n    }\n  }\n\n  /**\n     * Hide Or Show Element\n     * @param {string} id\n     * @param {boolean} show\n     */\n  updateVisibility(id: string, show: boolean) {\n    const search = this.getByIdFromShadowRoot(id);\n    if (search) {\n      if (!show) {\n        search.classList.add('is-hidden');\n      } else {\n        search.classList.remove('is-hidden');\n      }\n    }\n  }\n\n\n  public set innerHTML(input: string) {\n    if (this.shadowRoot != null) {\n      this.shadowRoot.innerHTML = input;\n    } else {\n      super.innerHTML = input;\n    }\n  }\n\n\n  // -----------------\n  // CLASS METHODS\n  // -----------------\n\n  /**\n     * Getting Template\n     * @return {string}\n     */\n  static get template(): string {\n    return `<link href=\"/node_modules/bulma/css/bulma.min.css\" \n                  rel=\"stylesheet\" type=\"text/css\">`;\n  }\n}\n","import {VetproviehElement} from './vetprovieh-element';\nimport {Indexable} from '../interfaces';\nimport {ViewHelper} from '../helpers';\n\n/**\n * Repeats Template Element. Amount is set by the amount of objects\n * inside\n */\nexport class VetproviehRepeat extends VetproviehElement {\n  /**\n      * Getting View Template\n      * @return {string}\n      */\n  static get template() {\n    return VetproviehElement.template + `<div id=\"listElements\"></div>`;\n  }\n\n  /**\n       * Getting observed Attributes\n       * @return {string[]}\n       */\n  static get observedAttributes() {\n    return ['objects', 'orderBy'];\n  }\n\n    private _objects: Array<any> = [];\n    private _listTemplate: DocumentFragment;\n    private _orderBy = '+position';\n\n    /**\n     * Default-Contructor\n     * @param {HTMLTemplateElement} pListTemplate\n     */\n    constructor(pListTemplate: HTMLTemplateElement | undefined = undefined) {\n      super();\n\n      const listTemplate = pListTemplate || this.querySelector('template');\n      if (listTemplate) {\n        this._listTemplate = listTemplate.content;\n      } else {\n        this._listTemplate = new DocumentFragment();\n      }\n    }\n\n    /**\n     * Get objects\n     * @return {Array<any>}\n     */\n    public get objects(): Array<any> {\n      return this._objects;\n    }\n\n    /**\n     * Set objects\n     * @param {Array<any>} v\n     */\n    public set objects(v: Array<any>) {\n      if (this._objects != v) {\n        this._objects = v;\n        this.clearAndRender();\n      }\n    }\n\n    /**\n    * Get OrderBy\n    * Expect \"+position\" for asceding positon\n    * Expect \"-position\" for descending position\n    * @return {string}\n    */\n    public get orderBy(): string {\n      return this._orderBy;\n    }\n\n    /**\n     * Set OrderBy\n     * @param {string} v\n     */\n    public set orderBy(v: string) {\n      if (this._orderBy != v) {\n        this._orderBy = v;\n        this.clearAndRender();\n      }\n    }\n\n    /**\n    * Connected Callback\n    */\n    connectedCallback() {\n      this._initalizeShadowRoot(VetproviehRepeat.template);\n      this.renderList();\n    }\n\n    /**\n     * Clear and Render\n     */\n    clearAndRender() {\n      this.clear();\n      this._sortObjects();\n      this.renderList();\n    }\n\n    /**\n     * Sorting Objects\n     */\n    private _sortObjects() {\n      try {\n        const asc = this.orderBy.substring(0, 1) == '+' ? 1 : -1;\n        const argument = this.orderBy.substring(1);\n        this.objects = this.objects\n            .sort((a: any, b: any) => {\n              const aValue = a[argument];\n              const bValue = b[argument];\n              return (aValue - bValue) * asc;\n            });\n      } catch (e) {\n\n      }\n    }\n\n    /**\n     * List will be cleared\n     */\n    clear() {\n      const list = this.list;\n      if (list) list.innerHTML = '';\n    }\n\n    /**\n     * Rendering List-Content\n     */\n    renderList() {\n      this.objects\n          .forEach((obj: any, index: number) => {\n            this._attachToList(obj, index);\n          });\n    }\n\n    /**\n     * Inserts Element to List\n     * @param {any} dataItem\n     * @param {index} number\n     * @private\n     */\n    protected _attachToList(dataItem: any, index = 0) {\n      if (this.shadowRoot) {\n        const newListItem: HTMLElement = this._generateListItem(dataItem);\n        dataItem['index'] = index;\n        ViewHelper.replacePlaceholders(newListItem, dataItem);\n\n        const list = this.list;\n        if (list) {\n          list.appendChild(newListItem.children[0]);\n        }\n      }\n    }\n\n\n    /**\n     * Getting List Element\n     * @return {HTMLElement | undefined}\n     */\n    protected get list(): HTMLElement | undefined {\n      if (this.shadowRoot) {\n        return this.shadowRoot.getElementById('listElements') as HTMLElement;\n      } else {\n        return undefined;\n      }\n    }\n\n    /**\n    * Generate new Item for List which is based on the template\n    * @param {any} dataItem\n    * @param {boolean} activatedEventListener\n    * @return {HTMLDivElement}\n    * @private\n    */\n    protected _generateListItem(dataItem: any, activatedEventListener = false) {\n      const newNode = document.importNode(this._listTemplate, true);\n      const div = document.createElement('div');\n\n      if (activatedEventListener) {\n        div.addEventListener('click', () => {\n          const selectedEvent = new Event('selected');\n          (selectedEvent as Indexable)['data'] = dataItem;\n          this.dispatchEvent(selectedEvent);\n        });\n      }\n\n      div.appendChild(newNode);\n      return div;\n    }\n\n    /**\n     * Intializing Shadow-Root\n     * @param {string} template\n     * @protected\n     */\n    protected _initalizeShadowRoot(template: string) {\n      // Lazy creation of shadowRoot.\n      if (!this.shadowRoot) {\n        super.attachShadow({\n          mode: 'open',\n        }).innerHTML = template;\n      }\n    }\n}\n\nif (!customElements.get('vp-repeat')) {\n  customElements.define('vp-repeat', VetproviehRepeat);\n}\n","import {VetproviehElement} from '@tomuench/vetprovieh-shared/lib/index';\n\n/**\n * Paging Class\n */\nexport class VetproviehPager extends VetproviehElement {\n    private _properties = {\n      page: 1,\n      maximum: 1,\n    };\n\n    /**\n     * Observed Attributes\n     * @return {Array<string>}\n     */\n    static get observedAttributes() {\n      return ['page', 'maximum'];\n    }\n\n    /**\n     * Template for Pager\n     * @return {string}\n     */\n    static get template() {\n      return super.template + `\n        <style>\n          :host {\n            display: block;\n          }\n        </style>\n        <nav class=\"pagination is-centered is-small\" role=\"navigation\" \n             aria-label=\"pagination\">\n          <ul id=\"pager\" class=\"pagination-list\">\n          </ul>\n        </nav>`;\n    }\n\n\n    /**\n     * Page Getter\n     * @property {number|null} page\n     */\n    get page() {\n      return this._properties.page;\n    }\n\n    /**\n     * Setting page\n     * @param {number} val\n     */\n    set page(val: number) {\n      if (typeof(val) === 'string') val = parseInt(val);\n      if (val !== this.page && val <= this.maximum && val > 0) {\n        this._properties.page = val;\n        this._updateRendering();\n      }\n    }\n\n\n    /**\n     * @property {number|null} maximum\n     */\n    get maximum() {\n      return this._properties.maximum;\n    }\n\n    /**\n     * Setting Maximum\n     * @param {number} val\n     */\n    set maximum(val: number) {\n      if (val !== this.maximum) {\n        this._properties.maximum = val;\n        this._updateRendering();\n      }\n    }\n\n    /**\n     * Render Pages for Pager\n     * @private\n     */\n    _renderPages() {\n      const pager = this.getByIdFromShadowRoot('pager') as HTMLElement;\n      pager.appendChild(this._renderPage(1));\n      this._addBlankPage(pager, this.page > 3);\n\n      for (let i = -1; i < 2; i++) {\n        const toDisplayPage = this.page + i;\n        if (toDisplayPage > 1 && toDisplayPage < this.maximum) {\n          pager.appendChild(this._renderPage(toDisplayPage));\n        }\n      }\n\n      this._addBlankPage(pager, this.page < this.maximum - 2);\n      if (this.maximum != 1) {\n        pager.appendChild(this._renderPage(this.maximum));\n      }\n    }\n\n    /**\n     * render Page placeholder\n     * @param {HTMLElement} pager\n     * @param {boolean} show\n     * @private\n     */\n    _addBlankPage(pager: HTMLElement, show: boolean) {\n      if (show) {\n        const li = document.createElement('li');\n        const span = document.createElement('span');\n        span.classList.add('pagination-ellipsis');\n        span.innerHTML = '&hellip;';\n        li.appendChild(span);\n        pager.appendChild(li);\n      }\n    }\n\n    /**\n     * Render Single page Button\n     * @param {number} page\n     * @return {HTMLLIElement} Element\n     * @private\n     */\n    _renderPage(page: number): HTMLLIElement {\n      const li = document.createElement('li');\n      const a = document.createElement('a');\n      a.classList.add('pagination-link');\n      if (page === this.page) {\n        a.classList.add('is-current');\n      }\n\n      a.onclick = (event) => this._pageClickedEvent(this, event);\n\n      a.title = 'Open Page #' + this.page;\n      const linkText = document.createTextNode(page.toString());\n      a.appendChild(linkText);\n      li.appendChild(a);\n\n      return li;\n    }\n\n    /**\n     * Page-Button has been clicked\n     * @param {VetproviehPager} pager\n     * @param {Event} event\n     * @private\n     */\n    _pageClickedEvent(pager: VetproviehPager, event: Event) {\n      pager.page = parseInt((event.target as HTMLLIElement).innerText);\n      pager.dispatchEvent(new Event('change'));\n    }\n\n    /**\n     * Connected Callback\n     */\n    connectedCallback() {\n      // Lazy creation of shadowRoot.\n      if (!this.shadowRoot) {\n        this.attachShadow({\n          mode: 'open',\n        }).innerHTML = VetproviehPager.template;\n      }\n      this._updateRendering();\n    }\n\n    /**\n     * @private\n     */\n    _updateRendering() {\n      if (this.shadowRoot) {\n        const pager = this.getByIdFromShadowRoot('pager') as HTMLElement;\n        pager.innerHTML = '';\n        this._renderPages();\n      }\n    }\n}\n\nif(!customElements.get('vetprovieh-pager')){\n  customElements.define('vetprovieh-pager', VetproviehPager);\n}\n","import { VetproviehPager } from \"@tomuench/vetprovieh-pager/lib\";\nimport { VetproviehElement, WebComponent, IRepository } from \"@tomuench/vetprovieh-shared/lib/index\";\nimport { ListItem } from \"./list-item\";\n\nexport { VetproviehPager } from \"@tomuench/vetprovieh-pager/lib\";\n/**\n * List Element for Vet:Provieh\n * Reads Data from Webservice an shows it.\n * @property {boolean} searchable\n * @property {boolean} pageable\n * @property {string} src\n */\n@WebComponent({\n    template: VetproviehElement.template + `<style>\n                :host {\n                    display: block;\n                }\n                #listElements div{\n                    cursor: pointer;\n                }\n                #listElements div:hover {\n                    background-color: #F0F0F0 !important;\n                }\n                </style>\n            \n                <!-- SearchControl on Top -->\n                <div id=\"searchControl\" class=\"control\">\n                <input id=\"search\" class=\"input\" type=\"text\" \n                        placeholder=\"Bitte Suchbegriff eingeben\">\n                </div>\n            \n                <!-- Listing Elements here -->\n                <div id=\"listElements\" style=\"margin-top:20px;\">\n            \n                </div>\n                <!-- Pager for Paging through List-->\n                <vetprovieh-pager id=\"pager\" page=\"1\" maximum=\"7\">\n                </vetprovieh-pager>`,\n    tag: \"vetprovieh-list\"\n})\nexport class VetproviehList extends VetproviehElement {\n\n    /**\n     * Getting observed Attributes\n     * @return {string[]}\n     */\n    static get observedAttributes() {\n        return ['pagesize', 'searchable', 'pageable'];\n    }\n\n    private _pagesize: number = 0;\n    private _searchable: boolean = true;\n    private _pageable: boolean = true;\n    private _page: number = 1;\n    private _maxPage: number = 1;\n    private _listTemplate: DocumentFragment;\n\n    private _objects: any[] = [];\n    private _repository: IRepository<any> | undefined;\n\n    public get repository(){\n        return this._repository;\n    }\n\n    public set repository(val) {\n        if(this._repository != val){\n            this._repository = val;\n            this._filterObjects();\n        }\n    }\n\n    public get objects() {\n        return this._objects;\n    }\n\n    /**\n     * Default Constructor\n     * accepts a template as parameter\n     * @param {HTMLTemplateElement} pListTemplate\n     */\n    constructor(pListTemplate: HTMLTemplateElement | undefined = undefined) {\n        super();\n\n        const listTemplate = pListTemplate || this.querySelector('template');\n        if (listTemplate) {\n            this._listTemplate = listTemplate.content;\n        }\n    }\n\n    /**\n     * Getter searchable\n     * @property {string|null} searchable\n     */\n    get searchable() {\n        return this._searchable;\n    }\n\n    get listTemplate() {\n        return this._listTemplate;\n    }\n\n    /**\n     * Setter Searchable\n     * @param {boolean} val\n     */\n    set searchable(val) {\n        if (val !== this.searchable) {\n            this._searchable = val;\n            super.updateVisibility('searchControl', this.searchable);\n        }\n    }\n\n    /**\n     * Getter Pageable\n     * @property {string|null} pageable\n     */\n    get pageable() {\n        return this._pageable;\n    }\n\n    /**\n     * Setter Pageable\n     * @param {boolean} val\n     */\n    set pageable(val) {\n        if (val !== this.pageable) {\n            this._pageable = val;\n            this._updatePager();\n        }\n    }\n\n    /**\n     * Getter pagesize\n     * @property {int} pagesize\n     * @return {int}\n     */\n    get pagesize() {\n        return this._pagesize;\n    }\n\n\n    /**\n     * Setter Pagesize\n     * @param {int} val\n     */\n    set pagesize(val) {\n        if (val !== this.pagesize) {\n            this._pagesize = val;\n            this._setMaxPage(this._objects.length);\n        }\n    }\n\n    /**\n     * Getter CurrentPage\n     * @property {int} page\n     * @return {int}\n     */\n    get page() {\n        return this._page;\n    }\n\n    /**\n     * Setter CurrentPage\n     * @param {int} val\n     */\n    set page(val) {\n        if (val !== this.page && val <= this.maxPage) {\n            this._page = val;\n            this._updatePager();\n        }\n    }\n\n    /**\n     * Getter MaxPage\n     * @property {int} maxPage\n     * @return {int}\n     */\n    get maxPage() {\n        return this._maxPage;\n    }\n\n\n    /**\n     * Setter MaxPage\n     * @param {int} val\n     */\n    set maxPage(val) {\n        if (val !== this.maxPage) {\n            this._maxPage = val;\n            this._updatePager();\n        }\n    }\n\n    /**\n     * Connected Callback\n     */\n    connectedCallback() {\n        super.connectedCallback();\n        this._addSearchFieldListener();\n        this._filterObjects();\n        this._updatePager();\n        this._addPagerListener();\n    }\n\n    /**\n     * Attach Data to List\n     * @param {Array} data\n     * @param {string} searchValue\n     * @param {boolean} clear\n     */\n    attachData(data, searchValue, clear = false) {\n        if (clear) {\n            this.shadowRoot.getElementById('listElements').innerHTML = '';\n        }\n        data.forEach((element) => this._attachToList(element, searchValue));\n        this._objects = data;\n    }\n\n    /**\n     * Search for a string\n     * @param {string} searchString\n     */\n    search(searchString: string) {\n        this._filterObjects(searchString);\n    }\n\n    // -----------------\n    // PRIVATE METHODS\n    // -----------------\n\n    /**\n     * Adding PageListener\n     * @private\n     */\n    _addPagerListener() {\n        if (this._pager) {\n            this._pager.addEventListener('change', (event) => {\n                this.page = (event.target as VetproviehPager).page;\n                this._filterObjects();\n            });\n        }\n    }\n\n    /**\n     * Input in search has Changed\n     * @private\n     */\n    _addSearchFieldListener() {\n        if (this.shadowRoot) {\n            let searchTimer;\n            let value = null;\n            const searchField = this.shadowRoot.querySelector('#search');\n            searchField.addEventListener('keyup', (event) => {\n                let target = event.target as HTMLInputElement\n                if (value != target.value) {\n                    clearTimeout(searchTimer);\n                    value = target.value;\n                    searchTimer = setTimeout((_) => {\n                        this.search(value);\n                    }, 300);\n                }\n            });\n            this.updateVisibility('searchControl', this.searchable);\n        }\n    }\n\n    /**\n     * Updating Pager\n     */\n    _updatePager() {\n        if (this.shadowRoot) {\n            this.updateVisibility(this._pager.id, this.pageable);\n            this._pager.page = this.page;\n            this._pager.maximum = this.maxPage;\n        }\n    }\n\n    /**\n     * GET Pager Element\n     * @return {VetproviehPager}\n     * @private\n     */\n    get _pager(): VetproviehPager {\n        return this.shadowRoot.getElementById('pager') as VetproviehPager;\n    }\n\n    /**\n     * Can component fetch new data?\n     * @private\n     */\n    get _readyToFetch() {\n        return this.pagesize && this.repository && this.shadowRoot;\n    }\n\n    /**\n     * Loading Data from Remote-Server\n     * @param {string | undefined} searchValue\n     * @private\n     */\n    _filterObjects(searchValue: string | undefined = undefined) {\n        if (this._readyToFetch) {\n            const self = this;\n\n\n            this.repository.where(searchValue)\n                .then((data) => this._sort(data))\n                .then((data) => { self._setMaxPage(data.length); return data })\n                .then((data) => self._filterByPage(data))\n                .then((data) => self.attachData(data, searchValue, true));\n        }\n    }\n\n    /**\n     * Sorting Data. can be overwritten\n     * @param data \n     */\n    protected _sort(data) {\n        return data;\n    }\n\n    /**\n     * Set Max-Page by lenth of data\n     * @param {number} dataLength\n     * @return {boolean}\n     */\n    _setMaxPage(dataLength: number) {\n        this.maxPage = Math.ceil(dataLength / this.pagesize);\n        return true;\n    }\n\n    /**\n     * Inserts Element to List\n     * @param {object} element\n     * @param {string} searchValue\n     * @private\n     */\n    _attachToList(element, searchValue) {\n        if (this.shadowRoot) {\n            const list: HTMLElement | null = this.shadowRoot.getElementById('listElements');\n            if (list) {\n                const newListItem: ListItem = new ListItem(this, element);\n                newListItem.mark(searchValue);\n                list.appendChild(newListItem);\n            }\n        }\n    }\n\n\n\n    /**\n     * Filter Data by Page\n     * @param {Array} data\n     * @param {number} currentPage\n     * @param {number} pageSize\n     * @return {Array}\n     * @private\n     */\n    _filterByPage(data: Array<any>) {\n        return data.slice(\n            (this.page - 1) * this.pagesize,\n            this.page * this.pagesize,\n        );\n    }\n\n    // -----------------\n    // CLASS METHODS\n    // -----------------\n\n\n\n}\n"],"names":["ObjectHelper","ViewHelper","VetproviehElement","VetproviehRepeat"],"mappings":"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"}